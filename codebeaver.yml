ignore: ['**/migrations', '**/*_initial.py', '**/*_auto_*.py']
services:
  python:
    image: "python:3.11-slim"
main_service: python
test_commands: ['export PATH="/root/.local/bin:$PATH"', 'poetry run coverage run --rcfile=.coveragerc -m pytest --show-capture=no', 'poetry run coverage combine || true', 'poetry run coverage json -i || true']
setup_commands: ['apt-get update && apt-get install -y curl apt-utils', 'python -m ensurepip --default-pip || true', 'python -m pip install --upgrade pip || true', 'curl -sSL https://install.python-poetry.org | python3 -', 'export PATH="/root/.local/bin:$PATH"', 'if [ -f "pyproject.toml" ]; then poetry install --with dev --no-interaction --all-extras || true; fi', 'poetry run python -c "import coverage" 2>/dev/null || (poetry add coverage --group dev 2>/dev/null || poetry add -G dev coverage) || true', 'poetry run python -c "import pytest" 2>/dev/null || (poetry add pytest --group dev 2>/dev/null || poetry add -G dev pytest) || true', 'poetry run python -c "import pytest_cov" 2>/dev/null || (poetry add "pytest-cov>=4.1.0" --group dev 2>/dev/null || poetry add "pytest-cov>=4.1.0" --dev) || true', 'poetry run python -c "import pytest_json_report" 2>/dev/null || (poetry add pytest-json-report --group dev 2>/dev/null || poetry add pytest-json-report --dev) || true', 'poetry run python -c "import pytest_django" 2>/dev/null || (poetry run python -c "import django" 2>/dev/null && (poetry add pytest-django --group dev 2>/dev/null || poetry add pytest-django --dev)) || true', 'poetry update --lock', 'if [ ! -f ".coveragerc" ]; then echo -e "[run]\\nrelative_files = True\\nsource = .\\ninclude =\\n *.py\\nomit =\\n */test_*.py\\n */*_test.py\\n */tests/*\\n */testing/*\\n */test/*\\n tests/**\\n **/tests/**\\n .tox/*\\n /usr/*\\n[report]\\nshow_missing = True" > .coveragerc; fi']
single_file_test_commands: ['export PATH="/root/.local/bin:$PATH"', 'poetry run coverage run -m pytest "$TEST_FILE"', 'poetry run coverage json']